<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<?php $typeId = $_product->getTypeId(); ?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
    <!--<div class="message-box">--><?php echo $this->getMessagesBlock()->toHtml() ?><!--</div>-->
<div class="product-details">
    <div class="product-essential">
        <form action="<?php echo $this->getSubmitUrl($_product, array('_secure' => $this->_isSecure())) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
            <?php echo $this->getBlockHtml('formkey') ?>
            <div class="no-display">
                <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
                <input type="hidden" name="related_product" id="related-products-field" value="" />
            </div>

            <h1 class="c-p beta"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>

            <div class="col
                <?php if ($typeId == 'grouped' || $typeId == 'bundle') : ?>
                    m-12-12 l-6-12 
                    
                <?php elseif ($typeId == 'simple' || $typeId == 'configurable') : ?>
                    m-6-12 l-8-12 
                <?php endif; ?>

            end">
                <?php echo $this->getChildHtml('media') ?>
            </div>

            <!-- Price of Item -->
            <div class="col 
                <?php if ($typeId == 'grouped' || $typeId == 'bundle') : ?>
                    m-12-12 l-6-12 
                    
                <?php elseif ($typeId == 'simple' || $typeId == 'configurable') :  ?>
                    m-6-12 l-4-12
                <?php endif; ?>
            ">
                <div class="product-details_content
                    <?php if ($typeId == 'grouped' || $typeId == 'bundle') : ?>
                        m-12-12 l-6-12 
                        
                    <?php elseif ($typeId == 'simple' || $typeId == 'configurable') : ?>
                        m-6-12 l-8-12 
                    <?php endif; ?>
                ">
                    <div class="extra-pad">
                         <h4 class="price"><?php echo $this->getPriceHtml($_product); ?>
                        <?php echo $this->getChildHtml('bundle_prices') ?>
                         <?php echo $this->getTierPriceHtml() ?>
                         </h4>

                         <?php //Short Description ?>
                         <?php if ($_product->getShortDescription()):?>
                             <p class="description"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></p>
                         <?php endif; ?>

                         <?php // Disable Product Availaibility ?>
                         <?php //echo $this->getChildHtml('product_type_availability'); ?>
                    </div>

                    <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                        <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                    <?php endif;?>


                    <div class="extra-pad">
                        <div class="add-to-cart-wrapper">
                            <?php echo $this->getChildHtml('product_type_data') ?>
                            <?php echo $this->getChildHtml('extrahint') ?>

                            <?php if (!$this->hasOptions()):?>
                                <div class="add-to-box">
                                    <?php if($_product->isSaleable()): ?>
                                        <?php echo $this->getChildHtml('addtocart') ?>
                                        <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                                        <?php endif; ?>
                                    <?php endif; ?>
                                    <!-- Add to shopping list -->

                                    <?php //echo $this->getChildHtml('addto') ?>
                                    <div class="pb-20">&nbsp;</div>
                                    <?php echo $this->getChildHtml('sharing') ?>
                                </div>
                                <?php echo $this->getChildHtml('extra_buttons') ?>
                            <?php elseif (!$_product->isSaleable()): ?>
                                <div class="add-to-box">

                                    <!-- Add to shopping list -->
                                    <?php //echo $this->getChildHtml('addto') ?>
                                    <?php echo $this->getChildHtml('sharing') ?>
                                </div>
                            <?php endif; ?>
                        </div>


                        <?php // Extra Hint ?>
                        <p><?php echo $this->getChildHtml('extrahint') ?></p>

                        <?php echo $this->getChildHtml('related_products') ?>
                    </div>
                </div>
            </div>

            <div class="clearer"></div>
            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
            <?php endif;?>
        </form>
        <script type="text/javascript">
        //<![CDATA[
            var productAddToCartForm = new VarienForm('product_addtocart_form');
            productAddToCartForm.submit = function(button, url) {
                if (this.validator.validate()) {
                    var form = this.form;
                    var oldUrl = form.action;

                    if (url) {
                       form.action = url;
                    }
                    if(!url){
                        url = jQuery('#product_addtocart_form').attr('action');
                    }
                    url = url.replace("checkout/cart","ajax/index");

                    var data = jQuery('#product_addtocart_form').serialize(),
                        btnCart = jQuery('.btn-cart').find('span'),
                        btnCartHtml = btnCart.html();
                        data += '&isAjax=1';   
                        jQuery('#ajax_loader').show();

                        btnCart.html('Adding Item To Cart');

                     try {
                        jQuery.ajax({
                              url: url,
                              dataType: 'json',
                              type : 'post',
                              data: data,
                              success: function(data){
                                    jQuery('#ajax_loader').hide();
                                   if(jQuery('.mini-cart')){
                                       jQuery('.mini-cart').find('.minicart-count').html(jQuery(data.sidebar).find('.minicart-count').html());
                                       jQuery('.mini-cart').find('.mini-cart_overlay').html(jQuery(data.sidebar).find('.mini-cart_overlay').html());
                                   }
                                   btnCart.html('Item Added To Cart');
                                   setTimeout(function(){
                                        btnCart.html(btnCartHtml);
                                   }, 2000);
                              }
                        });
                        } catch (e) {
                     }
                        this.form.action = oldUrl;
                            /*if (e) {
                                //throw e;
                            }*/
                        }
                    }.bind(productAddToCartForm);


                    var updateCartForm = new VarienForm('product_addtocart_form');
                    updateCartForm.submit = function(button, url) {
                        if (this.validator.validate()) {
                            var form = this.form;
                            var oldUrl = form.action;

                            if (url) {
                               form.action = url;
                            }
                            if(!url){
                                url = jQuery('#product_addtocart_form').attr('action');
                            }
                            url = url.replace("checkout/cart","ajax/index");

                            var data = jQuery('#product_addtocart_form').serialize(),
                                btnCart = jQuery('.btn-cart').find('span'),
                                btnCartHtml = btnCart.html();
                                data += '&isAjax=1';   
                                jQuery('#ajax_loader').show();

                                btnCart.html('Updating Item in Cart');

                             try {
                                jQuery.ajax({
                                      url: url,
                                      dataType: 'json',
                                      type : 'post',
                                      data: data,
                                      success: function(data){
                                            jQuery('#ajax_loader').hide();
                                           if(jQuery('.mini-cart')){
                                               jQuery('.mini-cart').find('.minicart-count').html(jQuery(data.sidebar).find('.minicart-count').html());
                                               jQuery('.mini-cart').find('.mini-cart_overlay').html(jQuery(data.sidebar).find('.mini-cart_overlay').html());
                                           }
                                           btnCart.html('Item Updated');
                                           setTimeout(function(){
                                                btnCart.html(btnCartHtml);
                                           }, 2000);
                                      }
                                });
                                } catch (e) {
                             }
                                this.form.action = oldUrl;
                                    /*if (e) {
                                        //throw e;
                                    }*/
                                }
                            }.bind(updateCartForm);


            productAddToCartForm.submitLight = function(button, url){
                if(this.validator) {
                    var nv = Validation.methods;
                    delete Validation.methods['required-entry'];
                    delete Validation.methods['validate-one-required'];
                    delete Validation.methods['validate-one-required-by-name'];
                    // Remove custom datetime validators
                    for (var methodName in Validation.methods) {
                        if (methodName.match(/^validate-datetime-.*/i)) {
                            delete Validation.methods[methodName];
                        }
                    }

                    if (this.validator.validate()) {
                        if (url) {
                            this.form.action = url;
                        }
                        this.form.submit();
                    }
                    Object.extend(Validation.methods, nv);
                }
            }.bind(productAddToCartForm);
        //]]>
        </script>
</div>
</div>
<?php echo $this->getChildHtml('upsell_products') ?>
<div class="pb-large">&nbsp;</div>
<div class="pb-large">&nbsp;</div>